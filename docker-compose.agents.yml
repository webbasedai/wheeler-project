services:
  n8n:
    image: n8nio/n8n:latest
    user: root
    ports:
      - "443:443"  # Map HTTPS to n8n internal port
    environment:
      - N8N_HOST=agents.webbased.ai
      - N8N_PORT=443
      - N8N_PROTOCOL=https
      - N8N_SSL_KEY=/etc/n8n-certs/privkey.pem
      - N8N_SSL_CERT=/etc/n8n-certs/fullchain.pem
      - N8N_SECURE_COOKIE=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      # PostgreSQL configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      # Fix deprecation warnings
      - DB_SQLITE_POOL_SIZE=10
      - N8N_RUNNERS_ENABLED=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=true
    volumes:
      - n8n_agents_data:/home/node/.n8n
      - /etc/letsencrypt/archive/agents.webbased.ai/privkey1.pem:/etc/n8n-certs/privkey.pem:ro
      - /etc/letsencrypt/archive/agents.webbased.ai/fullchain1.pem:/etc/n8n-certs/fullchain.pem:ro
    restart: unless-stopped
    depends_on:
      - postgres
      - scraper

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password
    volumes:
      - postgres_agents_data:/var/lib/postgresql/data
    restart: unless-stopped

  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    volumes:
      - ./scraper:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DOMAIN_NAME=agents.webbased.ai
    restart: unless-stopped

volumes:
  n8n_agents_data:
  postgres_agents_data:
